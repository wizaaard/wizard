name: website lint & run tests & deploy
on:
  push:
    paths:
      - "client/**"
  pull_request:
    paths:
      - "client/**"

jobs:
  run-tests-and-lint:
    name: lint and run test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: cache deps
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
            path: '**/node_modules'
            key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: install deps
        run: yarn install

      - name: run client unit tests use Jest
        run: yarn test
        working-directory: client

      - name: run lint in client
        run: yarn lint
        working-directory: client

  upload-image:
    name: upload docker image to cloud
    needs: run-tests-and-lint
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v2

      - name: cache deps
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
            path: '**/node_modules'
            key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: install deps
        run: yarn install

      - name: build client
        run: yarn build || yarn build
        working-directory: client

      - name: docker login
        run: docker login --username=${{ secrets.TENCENT_YUN_USERNAME }} --password ${{ secrets.TENCENT_YUN_PASSWORD }}

      - name: build docker image
        run: docker build -f ./Dockerfile.Client -t wizard_website ./client

      - name: tag the image & push the image to cloud
        run: |
          docker tag $(docker images -q --filter reference=wizard_website) younccat/wizard_website:latest
          docker push younccat/wizard_website:latest

  pull-image:
    needs: [upload-image]
    name: pull image from cloud
    runs-on: ubuntu-latest
    steps:
      - name: deploy website
        uses: appleboy/ssh-action@master
        with:
            host: ${{ secrets.DEPLOY_SERVER_HOST }}
            username: ${{ secrets.DEPLOY_SERVER_USER }}
            password: ${{ secrets.DEPLOY_SERVER_PASSWORD }}
            port: ${{ secrets.DEPLOY_SERVER_SSH_PORT }}
            script: |
              docker network create wizardoc_net
              docker login --username=${{ secrets.TENCENT_YUN_USERNAME }} --password ${{ secrets.TENCENT_YUN_PASSWORD }}
              docker stop $(docker ps -q --filter ancestor=younccat/wizard_website)
              docker rm -f $(docker pas -q -a --filter ancestor=younccat/wizard_website)
              docker rmi -f $(docker images ancestor=younccat/wizard_website -q)
              docker pull younccat/wizard_website:latest
              docker run --name wizard_website --network wizardoc_net -d -p 8060:80 younccat/wizard_website:latest

